generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}


model User {
  id               Int        @id @default(autoincrement())
  user_email       String     @unique
  user_firstname   String
  user_lastname    String
  user_dob         DateTime   @db.Date
  user_status      UserStatus @default(ACTIVE)
  user_password    String
  user_role        UserRole
  user_type        UserType
  user_affiliation String
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt

  // Tickets submitted by this user
  submitted_tickets Ticket[]  @relation("TicketInquirer")
  // Tickets assigned to this user
  assigned_tickets  Ticket[]  @relation("TicketAssignee")
  messages         Message[]
  closed_tickets Ticket[] @relation("TicketClosedBy")

  @@map("users")
}

enum UserStatus {
  INACTIVE
  ACTIVE
}

enum UserRole {
  INQUIRER
  DISPATCHER
  PERSONNEL
  ADMIN
}

enum UserType {
  STUDENT
  EMPLOYEE
}


model Concern {
  concern_id      Int       @id @default(autoincrement())
  concern_title   String    
  concern_faq     Json[]  
  
  tickets         Ticket[]
}


model Ticket {
  ticket_id             Int        @id @default(autoincrement())
  ticket_submitteddate  DateTime   @default(now())
  ticket_assigneddate   DateTime?  @db.Date
  
  // Inquirer (submitter) relation
  inquirer_id           Int
  inquirer              User       @relation("TicketInquirer", fields: [inquirer_id], references: [id])
  
  // Assignee relation
  assignee_id           Int?
  assignee              User?      @relation("TicketAssignee", fields: [assignee_id], references: [id])
  
  concern_id            Int
  concern               Concern    @relation(fields: [concern_id], references: [concern_id])
  ticket_concern        String
  ticket_subconcern     String
  ticket_details        String
  ticket_attachment     String[]
  ticket_status         TicketStatus @default(NEW)
  ticket_resolution     String?
  ticket_rating         Int?
  ticket_resolveddate   DateTime?  @db.Date

  // Closed By relation
  ticket_closedby       Int?
  closedby              User?     @relation("TicketClosedBy", fields: [ticket_closedby], references: [id])

  @@map("tickets")
}

enum TicketStatus {
  NEW
  OPEN
  CLOSED
}

model Message {
  message_id            Int        @id @default(autoincrement())
  message_convoid       Int
  user_id               Int
  user                  User       @relation(fields: [user_id], references: [id])
  message_senderfname   String
  message_senderlname   String    
  message_content       String[]
  message_attachment    String[]
}